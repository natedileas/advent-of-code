import pytest
import io

from intcode import IntCodeComp


@pytest.mark.parametrize('input,output', 
	(
		([1,9,10,3,2,3,11,0,99,30,40,50], [3500,9,10,70, 2,3,11,0, 99, 30,40,50]),
		([1,0,0,0,99], [2,0,0,0,99]),
		([1,1,1,4,99,5,6,0,99], [30,1,1,4,2,5,6,0,99]),
		([1002,4,3,4,33], [1002,4,3,4,99])
	)
)
def test_day2_noinput(input, output):
	out = IntCodeComp(input).process()
	assert all([out[i] == output[i] for i in range(len(out))])


@pytest.mark.parametrize('input, output',
	(
		(8, 1),
		(7, 0),
		(9, 0),
		(-1, 0),
		(10000, 0),
	)
)
@pytest.mark.parametrize('program', 
	([3,9,8,9,10,9,4,9,99,-1,8], 
	[3,3,1108,-1,8,3,4,3,99]))
def test_input_equal_to_eight(program, input, output):
	comp = IntCodeComp(program)
	comp.put_input(input)
	comp.process()

	assert comp.get_output() == output


@pytest.mark.parametrize('input, output',
	(
		(-1, 1),
		(7, 1),
		(8, 0),
		(9, 0),
		(10000, 0),
	)
)
@pytest.mark.parametrize('program', 
	([3,9,7,9,10,9,4,9,99,-1,8], 
	[3,3,1107,-1,8,3,4,3,99]))
def test_input_less_than_eight(program, input, output):
	comp = IntCodeComp(program)
	comp.put_input(input)
	comp.process()

	assert comp.get_output() == output


@pytest.mark.parametrize('input, output',
	(
		(-1, 1),
		(0, 0),
		(1, 1),
		(10000, 1),
	)
)
@pytest.mark.parametrize('program', 
	([3,3,1105,-1,9,1101,0,0,12,4,12,99,1], 
	[3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]))
def test_input_non_zero(input, output, program):
	comp = IntCodeComp(program)
	comp.put_input(input)
	comp.process()

	assert comp.get_output() == output


@pytest.mark.parametrize('input, output',
	(
		(7, 999),
		(8, 1000),
		(9, 1001),
	)
)
def test_input_eight_equals(input, output):
	comp = IntCodeComp([3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31, 1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104, 999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99])
	comp.put_input(input)
	comp.process()

	assert comp.get_output() == output



if __name__ == '__main__':
	# day 2
	# realprog = [1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,9,19,23,2,23,13,27,1,27,9,31,2,31,6,35,1,5,35,39,1,10,39,43,2,43,6,47,1,10,47,51,2,6,51,55,1,5,55,59,1,59,9,63,1,13,63,67,2,6,67,71,1,5,71,75,2,6,75,79,2,79,6,83,1,13,83,87,1,9,87,91,1,9,91,95,1,5,95,99,1,5,99,103,2,13,103,107,1,6,107,111,1,9,111,115,2,6,115,119,1,13,119,123,1,123,6,127,1,127,5,131,2,10,131,135,2,135,10,139,1,13,139,143,1,10,143,147,1,2,147,151,1,6,151,0,99,2,14,0,0]
	# fixed_prog = [1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,9,19,23,2,23,13,27,1,27,9,31,2,31,6,35,1,5,35,39,1,10,39,43,2,43,6,47,1,10,47,51,2,6,51,55,1,5,55,59,1,59,9,63,1,13,63,67,2,6,67,71,1,5,71,75,2,6,75,79,2,79,6,83,1,13,83,87,1,9,87,91,1,9,91,95,1,5,95,99,1,5,99,103,2,13,103,107,1,6,107,111,1,9,111,115,2,6,115,119,1,13,119,123,1,123,6,127,1,127,5,131,2,10,131,135,2,135,10,139,1,13,139,143,1,10,143,147,1,2,147,151,1,6,151,0,99,2,14,0,0]
	# print(intCodeProc(fixed_prog)[0])

	# day 5 part 1; input 1
	# TESTprog = [3,225,1,225,6,6,1100,1,238,225,104,0,1102,68,5,225,1101,71,12,225,1,117,166,224,1001,224,-100,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1001,66,36,224,101,-87,224,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1101,26,51,225,1102,11,61,224,1001,224,-671,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,59,77,224,101,-136,224,224,4,224,1002,223,8,223,1001,224,1,224,1,223,224,223,1101,11,36,225,1102,31,16,225,102,24,217,224,1001,224,-1656,224,4,224,102,8,223,223,1001,224,1,224,1,224,223,223,101,60,169,224,1001,224,-147,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,38,69,225,1101,87,42,225,2,17,14,224,101,-355,224,224,4,224,102,8,223,223,1001,224,2,224,1,224,223,223,1002,113,89,224,101,-979,224,224,4,224,1002,223,8,223,1001,224,7,224,1,224,223,223,1102,69,59,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,677,224,1002,223,2,223,1006,224,329,1001,223,1,223,1007,226,226,224,1002,223,2,223,1006,224,344,1001,223,1,223,1108,226,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,374,101,1,223,223,1107,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,677,226,224,102,2,223,223,1005,224,419,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,434,101,1,223,223,107,226,226,224,1002,223,2,223,1005,224,449,1001,223,1,223,108,226,677,224,102,2,223,223,1005,224,464,101,1,223,223,1108,677,226,224,102,2,223,223,1005,224,479,101,1,223,223,1007,226,677,224,102,2,223,223,1006,224,494,101,1,223,223,107,677,677,224,102,2,223,223,1005,224,509,101,1,223,223,108,677,677,224,102,2,223,223,1006,224,524,1001,223,1,223,8,226,677,224,102,2,223,223,1005,224,539,101,1,223,223,107,677,226,224,102,2,223,223,1005,224,554,1001,223,1,223,8,226,226,224,102,2,223,223,1006,224,569,1001,223,1,223,7,677,226,224,1002,223,2,223,1005,224,584,1001,223,1,223,1108,226,226,224,102,2,223,223,1005,224,599,1001,223,1,223,1107,677,677,224,1002,223,2,223,1006,224,614,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,629,1001,223,1,223,108,226,226,224,102,2,223,223,1005,224,644,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,659,1001,223,1,223,1008,677,677,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226]
	# intCodeProc(TESTprog)
	pass